<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.bjtu.jzlj.mapper.PageSourceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="pagesourceRM_all" type="cn.edu.bjtu.jzlj.dao.PageSource">
        <id jdbcType="VARCHAR" column="id" property="id" />
        <result jdbcType="VARCHAR" column="source" property="source" />
        <result jdbcType="VARCHAR" column="sourcedesc" property="sourcedesc" />
        <result jdbcType="VARCHAR" column="bygroup" property="bygroup" />
    </resultMap>

<!--    根据角色id获取资源列表-->
<!--    <if test="id != null and id != ''">-->
    <select id="getPSourceListByRoleId" resultType="cn.edu.bjtu.jzlj.dao.PageSource">
        SELECT sp.id, sp.source, sp.sourcedesc, sp.bygroup
        FROM sys_pagesource sp
        LEFT JOIN sys_role_pagesource srp ON sp.id = srp.psource_id
        LEFT JOIN sys_role sr ON srp.role_id = sr.id
        WHERE 1=1
        <if test="id != null and id != ''">
            AND sr.id = #{id}
        </if>

    </select>



<!--    添加页面资源-->
    <insert id="addPageSource" parameterType="cn.edu.bjtu.jzlj.dao.PageSource">
      INSERT INTO
      sys_pagesource
      (id,source,sourcedesc,bygroup)
      VALUES
      (
      #{id, jdbcType=VARCHAR},
      #{source, jdbcType=VARCHAR},
      #{sourcedesc, jdbcType=VARCHAR},
      #{bygroup, jdbcType=VARCHAR})
    </insert>
    
    <update id="updatepageSource" parameterType="cn.edu.bjtu.jzlj.dao.PageSource">
        update sys_pagesource set source = #{source}, sourcedesc = #{sourcedesc}, bygroup = #{bugroup}
        where id = #{id}
    </update>

    <!-- 根据角色id查询拥有的页面资源分页接口 -->
    <select id="getPageSourceListByRoleId" resultType="cn.edu.bjtu.jzlj.dao.PageSource">
		select * from sys_pagesource where id in (
			select
				psource_id
			from
				sys_role sr
			inner join
				sys_role_pagesource srp
			on
				sr.id = srp.role_id
			where
				sr.id = #{roleid}
		)
	</select>

    <!-- 根据角色id查询没有的页面资源分页接口 -->
    <select id="getNoPageSourceListByRoleId" resultType="cn.edu.bjtu.jzlj.dao.PageSource">
		select * from sys_pagesource where id not in (
			select
				psource_id
			from
				sys_role sr
			inner join
				sys_role_pagesource srp
			on
				sr.id = srp.role_id
			where
				sr.id = #{roleid} ORDER BY source
		)
	</select>


    <select id="selectManypagesource" resultType="Integer">
        select count(distinct psource_id) from sys_role_pagesource where psource_id in
        <foreach collection="id" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>

    </select>

    <delete id="deleteManypagesource">
        delete  from sys_pagesource where id in
        <foreach collection="id" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getListByPage" parameterType="cn.edu.bjtu.jzlj.dao.PageSource"
            resultType="cn.edu.bjtu.jzlj.dao.PageSource">
        SELECT * FROM sys_pagesource WHERE 1=1
        <if test="pageSource.id != null and pageSource.id != ''">
            AND id = '${pageSource.id}'
        </if>
    </select>

    <select id="getAllList" parameterType="cn.edu.bjtu.jzlj.dao.PageSource"
            resultType="cn.edu.bjtu.jzlj.dao.PageSource">
        SELECT * FROM sys_pagesource WHERE 1=1
        <if test="_parameter.containsKey('pageSource') and pageSource!= null">
            <if test="pageSource.id != null and pageSource.id != ''">
                AND id = '${pageSource.id}'
            </if>
        </if>
        <if test="_parameter.containsKey('ew') and ew!= null">
            ${ew.customSqlSegment}
        </if>
    </select>


    <insert id="insertPsource">
        INSERT INTO sys_role_pagesource
      (role_id ,psource_id)
      VALUES
      (
      #{roleId, jdbcType=VARCHAR},
      #{id, jdbcType=VARCHAR},
    </insert>
</mapper>